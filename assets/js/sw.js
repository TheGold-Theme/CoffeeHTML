const CACHE_NAME="coffee",urlsToCache=["/CoffeeHTML/index.html","/CoffeeHTML/assets/css/styles.css","/CoffeeHTML/assets/js/main.js","/CoffeeHTML/assets/libraries/bootstrap/css/bootstrap.min.css","/CoffeeHTML/assets/libraries/bootstrap/js/bootstrap.bundle.min.js","/CoffeeHTML/assets/libraries/swiper/swiper-bundle.min.css","/CoffeeHTML/assets/libraries/swiper/swiper-bundle.min.js","/CoffeeHTML/assets/libraries/fontawesome/css/all.min.css","/CoffeeHTML/assets/libraries/coffee_icon/flaticon.css","/CoffeeHTML/assets/libraries/aos/aos.css","/CoffeeHTML/assets/libraries/aos/aos.js","/CoffeeHTML/assets/libraries/gsap/gsap.min.js","/CoffeeHTML/assets/libraries/gsap/ScrollTrigger.min.js","/CoffeeHTML/assets/js/lazy-loading.js","/CoffeeHTML/offline.html"];self.addEventListener("install",e=>{e.waitUntil(caches.open("coffee").then(e=>(console.log("Opened cache"),e.addAll(urlsToCache))))}),self.addEventListener("fetch",e=>{e.respondWith(caches.match(e.request).then(s=>"image"===e.request.destination?s||fetch(e.request).then(s=>{if(200===s.status){const t=s.clone();caches.open("coffee").then(s=>{s.put(e.request,t)})}return s}):e.request.url.includes("/reservation")||e.request.url.includes("/subscribe")||e.request.url.includes("/contact")?fetch(e.request).catch(()=>s||caches.match("/offline.html")):s||fetch(e.request).then(s=>{if(200===s.status){const t=s.clone();caches.open("coffee").then(s=>{s.put(e.request,t)})}return s}).catch(()=>{if("navigate"===e.request.mode)return caches.match("/offline.html")})))}),self.addEventListener("activate",e=>{e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>{if("coffee"!==e)return console.log("Deleting old cache:",e),caches.delete(e)}))))});